// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignupUser component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signup
    confirm_password="sdf"
    dispatch={[MockFunction]}
    handleChange={[MockFunction]}
    handleSignup={[MockFunction]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "pathname": "/auth/signup",
      }
    }
    password=""
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    username=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SignUpView
        confirm_password=""
        dispatch={[MockFunction]}
        handleChange={[Function]}
        handleSignup={[Function]}
        history={
          Object {
            "push": [MockFunction],
          }
        }
        location={
          Object {
            "pathname": "/auth/signup",
          }
        }
        password=""
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        username=""
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "confirm_password": "",
        "dispatch": [MockFunction],
        "handleChange": [Function],
        "handleSignup": [Function],
        "history": Object {
          "push": [MockFunction],
        },
        "location": Object {
          "pathname": "/auth/signup",
        },
        "password": "",
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "username": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SignUpView
          confirm_password=""
          dispatch={[MockFunction]}
          handleChange={[Function]}
          handleSignup={[Function]}
          history={
            Object {
              "push": [MockFunction],
            }
          }
          location={
            Object {
              "pathname": "/auth/signup",
            }
          }
          password=""
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          username=""
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "confirm_password": "",
          "dispatch": [MockFunction],
          "handleChange": [Function],
          "handleSignup": [Function],
          "history": Object {
            "push": [MockFunction],
          },
          "location": Object {
            "pathname": "/auth/signup",
          },
          "password": "",
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "username": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
